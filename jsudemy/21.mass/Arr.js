"use strict";

// 1 Работа с массивами 
// 1.1 Методы
const arr = [1, 2, 3, 6, 8];

arr.pop(); // Удаление последнего элемента из массива 

console.log(arr);

// 1.2
arr.push(10);

console.log(arr); // Добавлнение последнего элемента в массив

// 1.3 Перебираем массив 
const arr = [1, 2, 3, 6, 8];

for (let i = 0; i < arr.length; i++) {
    console.log(arr[i]);
}

// 1.3.1
const arr = [1, 2, 3, 6, 8];

for (let value of arr) {
    console.log(value);
}

// 1.4 интересное свойство 
const arr = [1, 2, 3, 6, 8];

console.log(arr.length); // 5 
// Как соотносится свойство length и порядковые номера данного массива?
// Ответ: свойство length состоит из последнего индекса массива +1

// 1.4.1 Занятное нарушение массива 
const arr = [1, 2, 3, 6, 8];
arr[99] = 0;
console.log(arr.length); 
// Консоль выведет, разумеется, выведет 100 -> т. к.
// см. ответ в п.  1.4 

// 1.4.2 
const arr = [1, 2, 3, 6, 8];
arr[99] = 0;
console.log(arr);
// [ 1, 2, 3, 6, 8, <94 empty items>, 0 ]


// 1.5 Ещё один метод перебора 
const arr = [1, 2, 3, 6, 8];

arr.forEach(function(item, i, arr) {
    console.log(`${i}: ${item} внутри массива ${arr}`)
});
// 0: 1 внутри массива 1,2,3,6,8
// 1: 2 внутри массива 1,2,3,6,8
// 2: 3 внутри массива 1,2,3,6,8
// 3: 6 внутри массива 1,2,3,6,8
// 4: 8 внутри массива 1,2,3,6,8
